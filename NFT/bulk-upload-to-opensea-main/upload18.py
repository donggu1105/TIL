# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'aW1wb3J0IHRraW50ZXIKaW1wb3J0IHN1YnByb2Nlc3MKZnJvbSB0a2ludGVyIGltcG9ydCAqCmZyb20gdGtpbnRlciBpbXBvcnQgZmlsZWRpYWxvZwppbXBvcnQgdGtpbnRlciBhcyB0awpmcm9tIHRraW50ZXIgaW1wb3J0IHR0awpmcm9tIHRraW50ZXIgaW1wb3J0IG1lc3NhZ2Vib3gKaW1wb3J0IHRraW50ZXIuZm9udCBhcyBmb250CmZyb20gdHVydGxlIGltcG9ydCB3aWR0aApmcm9tIFBJTCBpbXBvcnQgSW1hZ2VUaywgSW1hZ2UKaW1wb3J0IHVybGxpYi5yZXF1ZXN0CmZyb20gaW8gaW1wb3J0IEJ5dGVzSU8KaW1wb3J0IG9zCmltcG9ydCBpbwppbXBvcnQgc3lzCmltcG9ydCBwaWNrbGUKaW1wb3J0IHRpbWUKZnJvbSBkZWNpbWFsIGltcG9ydCAqCmltcG9ydCB3ZWJicm93c2VyCiMgZnJvbSBjbGljayBpbXBvcnQgY29tbWFuZApmcm9tIHNlbGVuaXVtIGltcG9ydCB3ZWJkcml2ZXIKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0LndhaXQgaW1wb3J0IFdlYkRyaXZlcldhaXQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY2hyb21lLm9wdGlvbnMgaW1wb3J0IE9wdGlvbnMKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydCBpbXBvcnQgZXhwZWN0ZWRfY29uZGl0aW9ucyBhcyBFeHBlY3RlZENvbmRpdGlvbnMKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydC51aSBpbXBvcnQgU2VsZWN0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNvbW1vbi5rZXlzIGltcG9ydCBLZXlzCmZyb20gZGF0ZXRpbWUgaW1wb3J0IHRpbWVkZWx0YSAgCmZyb20gZGF0ZXV0aWwucmVsYXRpdmVkZWx0YSBpbXBvcnQgcmVsYXRpdmVkZWx0YQpmcm9tIGRhdGV0aW1lIGltcG9ydCB0aW1lZGVsdGEsIGRhdGUKaW1wb3J0IGxvY2FsZQppbXBvcnQganNvbiAKaW1wb3J0IHNzbAppbXBvcnQgY2VydGlmaQoKc3NsLl9jcmVhdGVfZGVmYXVsdF9odHRwc19jb250ZXh0ID0gc3NsLl9jcmVhdGVfdW52ZXJpZmllZF9jb250ZXh0CgojY2hlY2sgbG9jYWwgZGF0ZSBmb3JtYXQKbG9jYWxlLnNldGxvY2FsZShsb2NhbGUuTENfQUxMLCAnJykKbGFzdGRhdGUgPSBkYXRlKGRhdGUudG9kYXkoKS55ZWFyLCAxMiwgMzEpCgpyb290ID0gVGsoKQoKcm9vdC5nZW9tZXRyeSgnNzUweDg1MCcpCnJvb3QucmVzaXphYmxlKEZhbHNlLCBGYWxzZSkKcm9vdC50aXRsZSgiTkZUcyBVcGxvYWQgdG8gT3BlblNlYSB2MS44IikKICAKaW5wdXRfc2F2ZV9saXN0ID0gWyJORlRzIGZvbGRlciA6IiwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0KbWFpbl9kaXJlY3RvcnkgPSBvcy5wYXRoLmpvaW4oc3lzLnBhdGhbMF0pCgoKZGVmIHN1cHBvcnRVUkwoKToKICAgIHdlYmJyb3dzZXIub3Blbl9uZXcoImh0dHBzOi8vd3d3LmluZm90cmV4Lm5ldC9vcGVuc2VhL3N1cHBvcnQuYXNwP3I9YXBwIikKCmRlZiBjb2ZmZWVVUkwoKToKICAgIHdlYmJyb3dzZXIub3Blbl9uZXcoImh0dHBzOi8vZ2l0aHViLmNvbS9pbmZvdHJleC9idWxrLXVwbG9hZC10by1vcGVuc2VhLyN0aGFua3MiKQoKY2xhc3MgV2ViSW1hZ2U6CiAgICBkZWYgX19pbml0X18oc2VsZiwgdXJsKToKICAgICAgICB3aXRoIHVybGxpYi5yZXF1ZXN0LnVybG9wZW4odXJsKSBhcyB1OgogICAgICAgICAgICByYXdfZGF0YSA9IHUucmVhZCgpCiAgICAgICAgI3NlbGYuaW1hZ2UgPSB0ay5QaG90b0ltYWdlKGRhdGE9YmFzZTY0LmVuY29kZWJ5dGVzKHJhd19kYXRhKSkKICAgICAgICBpbWFnZSA9IEltYWdlLm9wZW4oaW8uQnl0ZXNJTyhyYXdfZGF0YSkpCiAgICAgICAgc2VsZi5pbWFnZSA9IEltYWdlVGsuUGhvdG9JbWFnZShpbWFnZSkKCiAgICBkZWYgZ2V0KHNlbGYpOgogICAgICAgIHJldHVybiBzZWxmLmltYWdlCmltYWdldXJsID0gImh0dHBzOi8vd3d3LmluZm90cmV4Lm5ldC9vcGVuc2VhL2hlYWRlci5wbmciCmltZyA9IFdlYkltYWdlKGltYWdldXJsKS5nZXQoKQppbWFnZWxhYiA9IHRrLkxhYmVsKHJvb3QsIGltYWdlPWltZykKaW1hZ2VsYWIuZ3JpZChyb3c9MCwgY29sdW1uc3Bhbj0yKQppbWFnZWxhYi5iaW5kKCI8QnV0dG9uLTE+IiwgbGFtYmRhIGU6c3VwcG9ydFVSTCgpKQoKaXNfcG9seWdvbiA9IEJvb2xlYW5WYXIoKQppc19wb2x5Z29uLnNldChUcnVlKQoKaXNfbGlzdGluZyA9IEJvb2xlYW5WYXIoKQppc19saXN0aW5nLnNldChUcnVlKSAKCmlzX251bWZvcm1hdCA9IEJvb2xlYW5WYXIoKQppc19udW1mb3JtYXQuc2V0KEZhbHNlKSAKCgpkZWYgc2F2ZV9kdXJhdGlvbigpOgogICAgZHVyYXRpb25fdmFsdWUuc2V0KHZhbHVlPWR1cmF0aW9uX3ZhbHVlLmdldCgpKQogICAgIyBwcmludChkdXJhdGlvbl92YWx1ZS5nZXQoKSkKCmRlZiBvcGVuX2Nocm9tZV9wcm9maWxlKCk6CiAgICBzdWJwcm9jZXNzLlBvcGVuKAogICAgICAgIFsKICAgICAgICAgICAgInN0YXJ0IiwKICAgICAgICAgICAgImNocm9tZSIsCiAgICAgICAgICAgICItLXJlbW90ZS1kZWJ1Z2dpbmctcG9ydD04OTg5IiwKICAgICAgICAgICAgIi0tdXNlci1kYXRhLWRpcj0iICsgbWFpbl9kaXJlY3RvcnkgKyAiL2Nocm9tZV9wcm9maWxlIiwKICAgICAgICBdLAogICAgICAgIHNoZWxsPVRydWUsCiAgICApCgoKZGVmIHNhdmVfZmlsZV9wYXRoKCk6CiAgICAjcmV0dXJuIG9zLnBhdGguam9pbihzeXMucGF0aFswXSwgIlNhdmVfZmlsZS5jbG91ZCIpIAogICAgcmV0dXJuIG9zLnBhdGguam9pbihzeXMucGF0aFswXSwgIlNhdmVfZ3VpLmNsb3VkIikgCgoKIyBhc2sgZm9yIGRpcmVjdG9yeSBvbiBjbGlja2luZyBidXR0b24sIGNoYW5nZXMgYnV0dG9uIG5hbWUuCmRlZiB1cGxvYWRfZm9sZGVyX2lucHV0KCk6CiAgICBnbG9iYWwgdXBsb2FkX3BhdGgKICAgIHVwbG9hZF9wYXRoID0gZmlsZWRpYWxvZy5hc2tkaXJlY3RvcnkoKQogICAgTmFtZV9jaGFuZ2VfaW1nX2ZvbGRlcl9idXR0b24odXBsb2FkX3BhdGgpCgpkZWYgTmFtZV9jaGFuZ2VfaW1nX2ZvbGRlcl9idXR0b24odXBsb2FkX2ZvbGRlcl9pbnB1dCk6CiAgICB1cGxvYWRfZm9sZGVyX2lucHV0X2J1dHRvblsidGV4dCJdID0gdXBsb2FkX2ZvbGRlcl9pbnB1dAoKZGVmIGlzX251bWVyaWModmFsKToKCWlmIHN0cih2YWwpLmlzZGlnaXQoKToKCQlyZXR1cm4gVHJ1ZQoJZWxpZiBzdHIodmFsKS5yZXBsYWNlKCcuJywnJywxKS5pc2RpZ2l0KCk6CgkJcmV0dXJuIFRydWUKCWVsc2U6CgkJcmV0dXJuIEZhbHNlCgoKY2xhc3MgSW5wdXRGaWVsZDoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBsYWJlbCwgcm93X2lvLCBjb2x1bW5faW8sIHBvcywgIG1hc3Rlcj1yb290KToKICAgICAgICBzZWxmLm1hc3RlciA9IG1hc3RlcgogICAgICAgIHNlbGYuaW5wdXRfZmllbGQgPSBFbnRyeShzZWxmLm1hc3Rlciwgd2lkdGg9NjApCiAgICAgICAgc2VsZi5pbnB1dF9maWVsZC5ncmlkKGlwYWR5PTMpCiAgICAgICAgc2VsZi5pbnB1dF9maWVsZC5sYWJlbCA9IExhYmVsKG1hc3RlciwgdGV4dD1sYWJlbCwgYW5jaG9yPSJ3Iiwgd2lkdGg9MjAsIGhlaWdodD0xICkKICAgICAgICBzZWxmLmlucHV0X2ZpZWxkLmxhYmVsLmdyaWQocm93PXJvd19pbywgY29sdW1uPWNvbHVtbl9pbywgcGFkeD0xMiwgcGFkeT0yKQogICAgICAgIHNlbGYuaW5wdXRfZmllbGQuZ3JpZChyb3c9cm93X2lvLCBjb2x1bW49Y29sdW1uX2lvICsgMSwgcGFkeD0xMiwgcGFkeT0yKQogICAgICAgIAogICAgICAgIHRyeToKICAgICAgICAgICAgd2l0aCBvcGVuKHNhdmVfZmlsZV9wYXRoKCksICJyYiIpIGFzIGluZmlsZToKICAgICAgICAgICAgICAgIG5ld19kaWN0ID0gcGlja2xlLmxvYWQoaW5maWxlKQogICAgICAgICAgICAgICAgc2VsZi5pbnNlcnRfdGV4dChuZXdfZGljdFtwb3NdKQogICAgICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoKICAgICAgICAgICAgcGFzcwogICAgICAgIAogICAgZGVmIGluc2VydF90ZXh0KHNlbGYsIHRleHQpOgogICAgICAgIHNlbGYuaW5wdXRfZmllbGQuZGVsZXRlKDAsICJlbmQiKQogICAgICAgIHNlbGYuaW5wdXRfZmllbGQuaW5zZXJ0KDAsIHRleHQpCgogICAgZGVmIHNhdmVfaW5wdXRzKHNlbGYsIHBvcyk6CiAgICAgICAgI21lc3NhZ2Vib3guc2hvd3dhcm5pbmcoInNob3d3YXJuaW5nIiwgIldhcm5pbmciKQogICAgICAgIGlucHV0X3NhdmVfbGlzdC5pbnNlcnQocG9zLCBzZWxmLmlucHV0X2ZpZWxkLmdldCgpKQogICAgICAgICNwcmludChzZWxmLmlucHV0X2ZpZWxkLmdldCgpKQogICAgICAgIHdpdGggb3BlbihzYXZlX2ZpbGVfcGF0aCgpLCAid2IiKSBhcyBvdXRmaWxlOgogICAgICAgICAgICBwaWNrbGUuZHVtcChpbnB1dF9zYXZlX2xpc3QsIG91dGZpbGUpCiAgICAgICAgICAgIAogICAgZGVmIHZhbGlkYXRlX2lucHV0cyhzZWxmLCBtYXhsZW4sIHR5cGUsIG1lc3NhZ2UpOgoKICAgICAgICBpZiB0eXBlID09IDAgYW5kIChsZW4oc2VsZi5pbnB1dF9maWVsZC5nZXQoKSkgPT0gMCBvciAoc2VsZi5pbnB1dF9maWVsZC5nZXQoKSkuaXNkaWdpdCgpICE9IFRydWUgb3IgbGVuKHNlbGYuaW5wdXRfZmllbGQuZ2V0KCkpID4gbWF4bGVuKToKICAgICAgICAgICAgbWVzc2FnZWJveC5zaG93d2FybmluZygic2hvd3dhcm5pbmciLCBtZXNzYWdlKQogICAgICAgICAgICAgICAgCiAgICAgICAgZWxpZiB0eXBlID09IDEgYW5kIChsZW4oc2VsZi5pbnB1dF9maWVsZC5nZXQoKSkgPT0gMCBvciBpc19udW1lcmljKHNlbGYuaW5wdXRfZmllbGQuZ2V0KCkpID09IEZhbHNlIG9yIGxlbihzZWxmLmlucHV0X2ZpZWxkLmdldCgpKSA+PSBtYXhsZW4pOgogICAgICAgICAgICBtZXNzYWdlYm94LnNob3d3YXJuaW5nKCJzaG93d2FybmluZyIsIG1lc3NhZ2UpICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgZWxpZiB0eXBlID09IDIgYW5kICggbGVuKHNlbGYuaW5wdXRfZmllbGQuZ2V0KCkpID09IDAgb3IgbGVuKHNlbGYuaW5wdXRfZmllbGQuZ2V0KCkpID4gbWF4bGVuKToKICAgICAgICAgICAgbWVzc2FnZWJveC5zaG93d2FybmluZygic2hvd3dhcm5pbmciLCBtZXNzYWdlKQogICAgICAgICAgICAgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gVHJ1ZSAgICAgCiAgICAgICAgCgojIyNpbnB1dCBvYmplY3RzIyMjCmNvbGxlY3Rpb25fbGlua19pbnB1dCA9IElucHV0RmllbGQoIk9wZW5TZWEgQ29sbGVjdGlvbiBMaW5rOiIsIDIsIDAsIDEpCnN0YXJ0X251bV9pbnB1dCA9IElucHV0RmllbGQoIlN0YXJ0IE51bWJlcjoiLCAzLCAwLCAyKQplbmRfbnVtX2lucHV0ID0gSW5wdXRGaWVsZCgiRW5kIE51bWJlcjoiLCA0LCAwLCAzKQpwcmljZSA9IElucHV0RmllbGQoIkRlZmF1bHQgUHJpY2U6IiwgNSwgMCwgNCkKdGl0bGUgPSBJbnB1dEZpZWxkKCJUaXRsZToiLCA2LCAwLCA1KQpkZXNjcmlwdGlvbiA9IElucHV0RmllbG'
love = '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'
god = 'ICAgIyBkcml2ZXIuZmluZF9lbGVtZW50X2J5X3hwYXRoKCcvL2J1dHRvblt0ZXh0KCk9IkFkZCBtb3JlIl0nKS5jbGljaygpCiAgICAgICAgICAgICAgICBhZGRtb3JlX2J1dHRvbiA9IGRyaXZlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoJy8vYnV0dG9uW3RleHQoKT0iQWRkIG1vcmUiXScpCiAgICAgICAgICAgICAgICBkcml2ZXIuZXhlY3V0ZV9zY3JpcHQoImFyZ3VtZW50c1swXS5jbGljaygpOyIsIGFkZG1vcmVfYnV0dG9uKQogICAgICAgICAgICB0aW1lLnNsZWVwKDAuOSkKCiAgICAgICAgICAgIGRyaXZlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoJy8vYnV0dG9uW3RleHQoKT0iU2F2ZSJdJykuY2xpY2soKQogICAgICAgICAgICB0aW1lLnNsZWVwKDAuOCkKCgoKICAgICAgICAjIFNlbGVjdCBQb2x5Z29uIGJsb2NrY2hhaW4gaWYgYXBwbGljYWJsZQogICAgICAgICNpZiBpc19wb2x5Z29uLmdldCgpOgogICAgICAgICAgICAjIGJsb2NrY2hhaW5fYnV0dG9uID0gZHJpdmVyLmZpbmRfZWxlbWVudChCeS5YUEFUSCwgJy8vKltAaWQ9Il9fbmV4dCJdL2RpdlsxXS9tYWluL2Rpdi9kaXYvc2VjdGlvbi9kaXYvZm9ybS9kaXZbN10vZGl2L2RpdlsyXScpCiAgICAgICAgICAgICMgYmxvY2tjaGFpbl9idXR0b24uY2xpY2soKQogICAgICAgICAgICAjIHBvbHlnb25fYnV0dG9uX2xvY2F0aW9uID0gJy8vc3Bhbltub3JtYWxpemUtc3BhY2UoKSA9ICJNdW1iYWkiXScKICAgICAgICAgICAgIyB3YWl0LnVudGlsKEV4cGVjdGVkQ29uZGl0aW9ucy5wcmVzZW5jZV9vZl9lbGVtZW50X2xvY2F0ZWQoCiAgICAgICAgICAgICMgICAgIChCeS5YUEFUSCwgcG9seWdvbl9idXR0b25fbG9jYXRpb24pKSkKICAgICAgICAgICAgIyBwb2x5Z29uX2J1dHRvbiA9IGRyaXZlci5maW5kX2VsZW1lbnQoCiAgICAgICAgICAgICMgICAgIEJ5LlhQQVRILCBwb2x5Z29uX2J1dHRvbl9sb2NhdGlvbikKICAgICAgICAgICAgIyBwb2x5Z29uX2J1dHRvbi5jbGljaygpCgoKICAgICAgICBjcmVhdGUgPSBkcml2ZXIuZmluZF9lbGVtZW50X2J5X3hwYXRoKCcvLypbQGlkPSJfX25leHQiXS9kaXZbMV0vbWFpbi9kaXYvZGl2L3NlY3Rpb24vZGl2WzJdL2Zvcm0vZGl2L2RpdlsxXS9zcGFuL2J1dHRvbicpCiAgICAgICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uY2xpY2soKTsiLCBjcmVhdGUpCiAgICAgICAgdGltZS5zbGVlcCgwLjgpCgogICAgICAgICMgd2FpdF9jc3Nfc2VsZWN0b3IoImlbYXJpYS1sYWJlbD0nQ2xvc2UnXSIpCiAgICAgICAgIyBjcm9zcyA9IGRyaXZlci5maW5kX2VsZW1lbnRfYnlfY3NzX3NlbGVjdG9yKCJpW2FyaWEtbGFiZWw9J0Nsb3NlJ10iKQogICAgICAgICMgY3Jvc3MuY2xpY2soKQoKICAgICAgICB3YWl0X3hwYXRoKCcvaHRtbC9ib2R5L2Rpdls1XS9kaXYvZGl2L2Rpdi9kaXZbMl0vYnV0dG9uL2knKQogICAgICAgIGNyb3NzID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnL2h0bWwvYm9keS9kaXZbNV0vZGl2L2Rpdi9kaXYvZGl2WzJdL2J1dHRvbi9pJykKICAgICAgICBjcm9zcy5jbGljaygpCiAgICAgICAgdGltZS5zbGVlcCgwLjgpCgogICAgICAgIG1haW5fcGFnZSA9IGRyaXZlci5jdXJyZW50X3dpbmRvd19oYW5kbGUKCiAgICAgICAgaWYgaXNfbGlzdGluZy5nZXQoKToKICAgICAgICAgICAgIyB3YWl0X3hwYXRoKCcvLypbQGlkPSJfX25leHQiXS9kaXZbMV0vbWFpbi9kaXYvZGl2L2RpdlsxXS9kaXYvc3BhblsyXS9hJykKICAgICAgICAgICAgIyBzZWxsID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy8qW0BpZD0iX19uZXh0Il0vZGl2WzFdL21haW4vZGl2L2Rpdi9kaXZbMV0vZGl2L3NwYW5bMl0vYScpCiAgICAgICAgICAgICMgc2VsbC5jbGljaygpCiAgICAgICAgICAgIHdhaXRfeHBhdGgoJy8vYVt0ZXh0KCk9IlNlbGwiXScpCiAgICAgICAgICAgIHNlbGwgPSBkcml2ZXIuZmluZF9lbGVtZW50X2J5X3hwYXRoKCcvL2FbdGV4dCgpPSJTZWxsIl0nKQogICAgICAgICAgICBkcml2ZXIuZXhlY3V0ZV9zY3JpcHQoImFyZ3VtZW50c1swXS5jbGljaygpOyIsIHNlbGwpCiAgICAgICAgICAgIAogICAgICAgICAgICB3YWl0X2Nzc19zZWxlY3RvcigiaW5wdXRbcGxhY2Vob2xkZXI9J0Ftb3VudCddIikKICAgICAgICAgICAgYW1vdW50ID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV9jc3Nfc2VsZWN0b3IoImlucHV0W3BsYWNlaG9sZGVyPSdBbW91bnQnXSIpCiAgICAgICAgICAgIGFtb3VudC5zZW5kX2tleXMoc3RyKGxvb3BfcHJpY2UpKQogICAgICAgICAgICB0aW1lLnNsZWVwKDEpCgogICAgICAgICAgICAjZHVyYXRpb24KICAgICAgICAgICAgZHVyYXRpb25fZGF0ZSA9IGR1cmF0aW9uX3ZhbHVlLmdldCgpCiAgICAgICAgICAgICNwcmludChkdXJhdGlvbl9kYXRlKQogICAgICAgICAgICAjIHRpbWUuc2xlZXAoNjApCiAgICAgICAgICAgIGlmIGR1cmF0aW9uX2RhdGUgPT0gMSA6IAogICAgICAgICAgICAgICAgZW5kZGF5ID0gKGRhdGUudG9kYXkoKSArIHRpbWVkZWx0YShkYXlzPTEpKS5kYXkKICAgICAgICAgICAgICAgIGVuZG1vbnRoID0gKGRhdGUudG9kYXkoKSArIHRpbWVkZWx0YShkYXlzPTEpKS5tb250aAogICAgICAgICAgICAgICAgI3ByaW50KGVuZGRheSwgZW5kbW9udGgpCiAgICAgICAgICAgIGlmIGR1cmF0aW9uX2RhdGUgPT0gMyA6IAogICAgICAgICAgICAgICAgZW5kZGF5ID0gKGRhdGUudG9kYXkoKSArIHRpbWVkZWx0YShkYXlzPTMpKS5kYXkKICAgICAgICAgICAgICAgIGVuZG1vbnRoID0gKGRhdGUudG9kYXkoKSArIHRpbWVkZWx0YShkYXlzPTMpKS5tb250aAogICAgICAgICAgICAgICAgI3ByaW50KGVuZGRheSwgZW5kbW9udGgpCiAgICAgICAgICAgIGlmIGR1cmF0aW9uX2RhdGUgPT0gNyA6IAogICAgICAgICAgICAgICAgZW5kZGF5ID0gKGRhdGUudG9kYXkoKSArIHRpbWVkZWx0YShkYXlzPTcpKS5kYXkKICAgICAgICAgICAgICAgIGVuZG1vbnRoID0gKGRhdGUudG9kYXkoKSArIHRpbWVkZWx0YShkYXlzPTcpKS5tb250aCAgIAogICAgICAgICAgICAgICAgI3ByaW50KGVuZGRheSwgZW5kbW9udGgpICAgICAgIAogICAgICAgICAgICBpZiBkdXJhdGlvbl9kYXRlID09IDMwOgogICAgICAgICAgICAgICAgZW5kZGF5ID0gKGRhdGUudG9kYXkoKSArIHJlbGF0aXZlZGVsdGEobW9udGhzPSsxKSkuZGF5CiAgICAgICAgICAgICAgICBlbmRtb250aCA9IChkYXRlLnRvZGF5KCkgKyByZWxhdGl2ZWRlbHRhKG1vbnRocz0rMSkpLm1vbnRoCiAgICAgICAgICAgICAgICAjcHJpbnQoZW5kZGF5LCBlbmRtb250aCkKICAgICAgICAgICAgaWYgZHVyYXRpb25fZGF0ZSA9PSA2MDoKICAgICAgICAgICAgICAgIGVuZGRheSA9IChkYXRlLnRvZGF5KCkgKyByZWxhdGl2ZWRlbHRhKG1vbnRocz0rMikpLmRheQogICAgICAgICAgICAgICAgZW5kbW9udGggPSAoZGF0ZS50b2RheSgpICsgcmVsYXRpdmVkZWx0YShtb250aHM9KzIpKS5tb250aAogICAgICAgICAgICAgICAgI3ByaW50KGVuZGRheSwgZW5kbW9udGgpCiAgICAgICAgICAgIGlmIGR1cmF0aW9uX2RhdGUgPT0gOTA6CiAgICAgICAgICAgICAgICBlbmRkYXkgPSAoZGF0ZS50b2RheSgpICsgcmVsYXRpdmVkZWx0YShtb250aHM9KzMpKS5kYXkKICAgICAgICAgICAgICAgIGVuZG1vbnRoID0gKGRhdGUudG9kYXkoKSArIHJlbGF0aXZlZGVsdGEobW9udGhzPSszKSkubW9udGgKICAgICAgICAgICAgICAgICNwcmludChlbmRkYXksIGVuZG1vbnRoKQogICAgICAgICAgICBpZiBkdXJhdGlvbl9kYXRlID09IDEyMDoKICAgICAgICAgICAgICAgIGVuZGRheSA9IChkYXRlLnRvZGF5KCkgKyByZWxhdGl2ZWRlbHRhKG1vbnRocz0rNCkpLmRheQogICAgICAgICAgICAgICAgZW5kbW9udGggPSAoZGF0ZS50b2RheSgpICsgcmVsYXRpdmVkZWx0YShtb250aHM9KzQpKS5tb250aCAgCiAgICAgICAgICAgICAgICAjcHJpbnQoZW5kZGF5LCBlbmRtb250aCkgCiAgICAgICAgICAgIGlmIGR1cmF0aW9uX2RhdGUgPT0gMTUwOgogICAgICAgICAgICAgICAgZW5kZGF5ID0gKGRhdGUudG9kYXkoKSArIHJlbGF0aXZlZGVsdGEobW9udGhzPSs1KSkuZGF5CiAgICAgICAgICAgICAgICBlbmRtb250aCA9IChkYXRlLnRvZGF5KCkgKyByZWxhdGl2ZWRlbHRhKG1vbnRocz0rNSkpLm1vbnRoICAKICAgICAgICAgICAgICAgICNwcmludChlbmRkYXksIGVuZG1vbnRoKSAgCiAgICAgICAgICAgIGlmIGR1cmF0aW9uX2RhdGUgPT0gMTgwOgogICAgICAgICAgICAgICAgZW5kZGF5ID0gKGRhdGUudG9kYXkoKSArIHJlbGF0aXZlZGVsdGEobW9udGhzPSs2KSkuZGF5CiAgICAgICAgICAgICAgICBlbmRtb250aCA9IChkYXRlLnRvZGF5KCkgKyByZWxhdGl2ZWRlbHRhKG1vbnRocz0rNikpLm1vbnRoICAgCiAgICAgICAgICAgICAgICAjcHJpbnQoZW5kZGF5LCBlbmRtb250aCkKCiAgICAgICAgICAgIGlmIGR1cmF0aW9uX2RhdGUgIT0gMzA6CiAgICAgICAgICAgICAgICBhbW91bnQuc2VuZF9rZXlzKEtleXMuVEFCKQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjgpCiAgICAgICAgICAgICAgICAjIHdhaXRfeHBhdGgoJy8vKltAaWQ9ImR1cmF0aW9uIl0nKQogICAgICAgICAgICAgICAgIyBkcml2ZXIuZmluZF9lbGVtZW50X2J5X3hwYXRoKCcvLypbQGlkPSJkdXJhdGlvbiJdJykuY2xpY2soKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB3YWl0X3hwYXRoKCcvLypbQHJvbGU9ImRpYWxvZyJdL2RpdlsyXS9kaXZbMl0vZGl2L2RpdlsyXS9pbnB1dCcpCiAgICAgICAgICAgICAgICBzZWxlY3RfZHVyYXRpb25kYXkgPSBkcml2ZXIuZmluZF9lbGVtZW50X2J5X3hwYXRoKCcvLypbQHJvbGU9ImRpYWxvZyJdL2RpdlsyXS9kaXZbMl0vZGl2L2RpdlsyXS9pbnB1dCcpCiAgICAgICAgICAgICAgICBkcml2ZXIuZXhlY3V0ZV9zY3JpcHQoImFyZ3VtZW50c1swXS5jbGljaygpOyIsIHNlbGVjdF9kdXJhdGlvbmRheSkKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMC44KQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiBsYXN0ZGF0ZS5zdHJmdGltZSgnJXgnKVs6Ml0gPT0gIjEyIjoKICAgICAgICAgICAgICAgICAgICAjcHJpbnQoImlzIG1vbnRoIGZpcnN0IikKICAgICAgICAgICAgICAgICAgICBzZWxlY3RfZHVyYXRpb25kYXkuc2VuZF9rZXlzKHN0cihlbmRtb250aCkpCiAgICAgICAgICAgICAgICAgICAgc2VsZWN0X2R1cmF0aW9uZGF5LnNlbmRfa2V5cyhzdHIoZW5kZGF5KSkKICAgICAgICAgICAgICAgICAgICBzZWxlY3RfZHVyYXRpb25kYXkuc2VuZF9rZXlzKEtleXMuRU5URVIpCiAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgxKQogICAgICAgICAgICAgICAgZWxpZiBsYXN0ZGF0ZS5zdHJmdGltZSgnJXgnKVs6Ml'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))