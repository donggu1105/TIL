# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'aW1wb3J0IHRraW50ZXIKaW1wb3J0IHN1YnByb2Nlc3MKZnJvbSB0a2ludGVyIGltcG9ydCAqCmZyb20gdGtpbnRlciBpbXBvcnQgZmlsZWRpYWxvZwppbXBvcnQgdGtpbnRlciBhcyB0awpmcm9tIHRraW50ZXIgaW1wb3J0IG1lc3NhZ2Vib3gKaW1wb3J0IHRraW50ZXIuZm9udCBhcyBmb250CmZyb20gUElMIGltcG9ydCBJbWFnZVRrLCBJbWFnZQppbXBvcnQgdXJsbGliLnJlcXVlc3QKZnJvbSBpbyBpbXBvcnQgQnl0ZXNJTwppbXBvcnQgb3MKaW1wb3J0IGlvCmltcG9ydCBzeXMKaW1wb3J0IHBpY2tsZQppbXBvcnQgdGltZQpmcm9tIGRlY2ltYWwgaW1wb3J0ICoKaW1wb3J0IHdlYmJyb3dzZXIKZnJvbSBzZWxlbml1bSBpbXBvcnQgd2ViZHJpdmVyCmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNvbW1vbi5ieSBpbXBvcnQgQnkKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydC53YWl0IGltcG9ydCBXZWJEcml2ZXJXYWl0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNocm9tZS5vcHRpb25zIGltcG9ydCBPcHRpb25zCmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQgaW1wb3J0IGV4cGVjdGVkX2NvbmRpdGlvbnMgYXMgRXhwZWN0ZWRDb25kaXRpb25zCmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQudWkgaW1wb3J0IFNlbGVjdAppbXBvcnQganNvbiAKaW1wb3J0IHNzbAppbXBvcnQgY2VydGlmaQoKcm9vdCA9IFRrKCkKCnJvb3QuZ2VvbWV0cnkoJzc1MHg3NTAnKQpyb290LnJlc2l6YWJsZShGYWxzZSwgRmFsc2UpCnJvb3QudGl0bGUoIk5GVHMgVXBsb2FkIHRvIE9wZW5TZWEgdjEuMCIpCiAgCmlucHV0X3NhdmVfbGlzdCA9IFsiTkZUcyBmb2xkZXIgOiIsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdCm1haW5fZGlyZWN0b3J5ID0gb3MucGF0aC5qb2luKHN5cy5wYXRoWzBdKQoKCmRlZiBzdXBwb3J0VVJMKCk6CiAgICB3ZWJicm93c2VyLm9wZW5fbmV3KCJodHRwczovL3d3dy5pbmZvdHJleC5uZXQvb3BlbnNlYS9zdXBwb3J0LmFzcD9yPWFwcCIpCgpkZWYgY29mZmVlVVJMKCk6CiAgICB3ZWJicm93c2VyLm9wZW5fbmV3KCJodHRwczovL2dpdGh1Yi5jb20vaW5mb3RyZXgvYnVsay11cGxvYWQtdG8tb3BlbnNlYS8jdGhhbmtzIikKCmNsYXNzIFdlYkltYWdlOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHVybCk6CiAgICAgICAgd2l0aCB1cmxsaWIucmVxdWVzdC51cmxvcGVuKHVybCkgYXMgdToKICAgICAgICAgICAgcmF3X2RhdGEgPSB1LnJlYWQoKQogICAgICAgICNzZWxmLmltYWdlID0gdGsuUGhvdG9JbWFnZShkYXRhPWJhc2U2NC5lbmNvZGVieXRlcyhyYXdfZGF0YSkpCiAgICAgICAgaW1hZ2UgPSBJbWFnZS5vcGVuKGlvLkJ5dGVzSU8ocmF3X2RhdGEpKQogICAgICAgIHNlbGYuaW1hZ2UgPSBJbWFnZVRrLlBob3RvSW1hZ2UoaW1hZ2UpCgogICAgZGVmIGdldChzZWxmKToKICAgICAgICByZXR1cm4gc2VsZi5pbWFnZQppbWFnZXVybCA9ICJodHRwczovL3d3dy5pbmZvdHJleC5uZXQvb3BlbnNlYS9oZWFkZXIucG5nIgppbWcgPSBXZWJJbWFnZShpbWFnZXVybCkuZ2V0KCkKaW1hZ2VsYWIgPSB0ay5MYWJlbChyb290LCBpbWFnZT1pbWcpCmltYWdlbGFiLmdyaWQocm93PTAsIGNvbHVtbnNwYW49MikKaW1hZ2VsYWIuYmluZCgiPEJ1dHRvbi0xPiIsIGxhbWJkYSBlOnN1cHBvcnRVUkwoKSkKCmlzX3BvbHlnb24gPSBCb29sZWFuVmFyKCkKaXNfcG9seWdvbi5zZXQoVHJ1ZSkKCmlzX2xpc3RpbmcgPSBCb29sZWFuVmFyKCkKaXNfbGlzdGluZy5zZXQoVHJ1ZSkgCgppc19udW1mb3JtYXQgPSBCb29sZWFuVmFyKCkKaXNfbnVtZm9ybWF0LnNldChGYWxzZSkgCgoKCgpkZWYgb3Blbl9jaHJvbWVfcHJvZmlsZSgpOgogICAgc3VicHJvY2Vzcy5Qb3BlbigKICAgICAgICBbCiAgICAgICAgICAgICJzdGFydCIsCiAgICAgICAgICAgICJjaHJvbWUiLAogICAgICAgICAgICAiLS1yZW1vdGUtZGVidWdnaW5nLXBvcnQ9ODk4OSIsCiAgICAgICAgICAgICItLXVzZXItZGF0YS1kaXI9IiArIG1haW5fZGlyZWN0b3J5ICsgIi9jaHJvbWVfcHJvZmlsZSIsCiAgICAgICAgXSwKICAgICAgICBzaGVsbD1UcnVlLAogICAgKQoKCmRlZiBzYXZlX2ZpbGVfcGF0aCgpOgogICAgI3JldHVybiBvcy5wYXRoLmpvaW4oc3lzLnBhdGhbMF0sICJTYXZlX2ZpbGUuY2xvdWQiKSAKICAgIHJldHVybiBvcy5wYXRoLmpvaW4oc3lzLnBhdGhbMF0sICJTYXZlX2d1aS5jbG91ZCIpIAoKCiMgYXNrIGZvciBkaXJlY3Rvcnkgb24gY2xpY2tpbmcgYnV0dG9uLCBjaGFuZ2VzIGJ1dHRvbiBuYW1lLgpkZWYgdXBsb2FkX2ZvbGRlcl9pbnB1dCgpOgogICAgZ2xvYmFsIHVwbG9hZF9wYXRoCiAgICB1cGxvYWRfcGF0aCA9IGZpbGVkaWFsb2cuYXNrZGlyZWN0b3J5KCkKICAgIE5hbWVfY2hhbmdlX2ltZ19mb2xkZXJfYnV0dG9uKHVwbG9hZF9wYXRoKQoKZGVmIE5hbWVfY2hhbmdlX2ltZ19mb2xkZXJfYnV0dG9uKHVwbG9hZF9mb2xkZXJfaW5wdXQpOgogICAgdXBsb2FkX2ZvbGRlcl9pbnB1dF9idXR0b25bInRleHQiXSA9IHVwbG9hZF9mb2xkZXJfaW5wdXQKCmRlZiBpc19udW1lcmljKHZhbCk6CglpZiBzdHIodmFsKS5pc2RpZ2l0KCk6CgkJcmV0dXJuIFRydWUKCWVsaWYgc3RyKHZhbCkucmVwbGFjZSgnLicsJycsMSkuaXNkaWdpdCgpOgoJCXJldHVybiBUcnVlCgllbHNlOgoJCXJldHVybiBGYWxzZQoKY2xhc3MgSW5wdXRGaWVsZDoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBsYWJlbCwgcm93X2lvLCBjb2x1bW5faW8sIHBvcywgIG1hc3Rlcj1yb290KToKICAgICAgICBzZWxmLm1hc3RlciA9IG1hc3RlcgogICAgICAgIHNlbGYuaW5wdXRfZmllbGQgPSBFbnRyeShzZWxmLm1hc3Rlciwgd2lkdGg9NjApCiAgICAgICAgc2VsZi5pbnB1dF9maWVsZC5ncmlkKGlwYWR5PTMpCiAgICAgICAgc2VsZi5pbnB1dF9maWVsZC5sYWJlbCA9IExhYmVsKG1hc3RlciwgdGV4dD1sYWJlbCwgYW5jaG9yPSJ3Iiwgd2lkdGg9MjAsIGhlaWdodD0xICkKICAgICAgICBzZWxmLmlucHV0X2ZpZWxkLmxhYmVsLmdyaWQocm93PXJvd19pbywgY29sdW1uPWNvbHVtbl9pbywgcGFkeD0xMiwgcGFkeT0yKQogICAgICAgIHNlbGYuaW5wdXRfZmllbGQuZ3JpZChyb3c9cm93X2lvLCBjb2x1bW49Y29sdW1uX2lvICsgMSwgcGFkeD0xMiwgcGFkeT0yKQogICAgICAgIHRyeToKICAgICAgICAgICAgd2l0aCBvcGVuKHNhdmVfZmlsZV9wYXRoKCksICJyYiIpIGFzIGluZmlsZToKICAgICAgICAgICAgICAgIG5ld19kaWN0ID0gcGlja2xlLmxvYWQoaW5maWxlKQogICAgICAgICAgICAgICAgc2VsZi5pbnNlcnRfdGV4dChuZXdfZGljdFtwb3NdKQogICAgICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoKICAgICAgICAgICAgcGFzcwogICAgICAgIAogICAgZGVmIGluc2VydF90ZXh0KHNlbGYsIHRleHQpOgogICAgICAgIHNlbGYuaW5wdXRfZmllbGQuZGVsZXRlKDAsICJlbmQiKQogICAgICAgIHNlbGYuaW5wdXRfZmllbGQuaW5zZXJ0KDAsIHRleHQpCgogICAgZGVmIHNhdmVfaW5wdXRzKHNlbGYsIHBvcyk6CiAgICAgICAgI21lc3NhZ2Vib3guc2hvd3dhcm5pbmcoInNob3d3YXJuaW5nIiwgIldhcm5pbmciKQogICAgICAgIGlucHV0X3NhdmVfbGlzdC5pbnNlcnQocG9zLCBzZWxmLmlucHV0X2ZpZWxkLmdldCgpKQogICAgICAgIHdpdGggb3BlbihzYXZlX2ZpbGVfcGF0aCgpLCAid2IiKSBhcyBvdXRmaWxlOgogICAgICAgICAgICBwaWNrbGUuZHVtcChpbnB1dF9zYXZlX2xpc3QsIG91dGZpbGUpCiAgICAgICAgICAgIAogICAgZGVmIHZhbGlkYXRlX2lucHV0cyhzZWxmLCBtYXhsZW4sIHR5cGUsIG1lc3NhZ2UpOgoKICAgICAgICBpZiB0eXBlID09IDAgYW5kIChsZW4oc2VsZi5pbnB1dF9maWVsZC5nZ'
love = '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'
god = 'QuZ2V0KCk6CiAgICAgICAgICAgIHN0YXJ0X251bWZvcm1hdCA9IGYieyBzdGFydF9udW06MDR9IgogICAgICAgIGVsc2U6CiAgICAgICAgICAgICBzdGFydF9udW1mb3JtYXQgPSBmInsgc3RhcnRfbnVtOjAxfSIKCiAgICAgICAgcHJpbnQoIlN0YXJ0IGNyZWF0aW5nIE5GVCAiICsgIGxvb3BfdGl0bGUgKyBzdHIoc3RhcnRfbnVtZm9ybWF0KSkKICAgICAgICBwcmludCgnbnVtYmVyICcsICBzdGFydF9udW1mb3JtYXQpCiAgICAgICAgZHJpdmVyLmdldChjb2xsZWN0aW9uX2xpbmspCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgd2FpdF94cGF0aCgnLy8qW0BpZD0ibWVkaWEiXScpCiAgICAgICAgaW1hZ2VVcGxvYWQgPSBkcml2ZXIuZmluZF9lbGVtZW50X2J5X3hwYXRoKCcvLypbQGlkPSJtZWRpYSJdJykKICAgICAgICBpbWFnZVBhdGggPSBvcy5wYXRoLmFic3BhdGgoZmlsZV9wYXRoICsgIlxcaW1hZ2VzXFwiICsgc3RyKHN0YXJ0X251bWZvcm1hdCkgKyAiLiIgKyBsb29wX2ZpbGVfZm9ybWF0KSAgIyBjaGFuZ2UgZm9sZGVyIGhlcmUKICAgICAgICBpbWFnZVVwbG9hZC5zZW5kX2tleXMoaW1hZ2VQYXRoKQogICAgICAgIHRpbWUuc2xlZXAoMC44KQoKICAgICAgICBuYW1lID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy8qW0BpZD0ibmFtZSJdJykKICAgICAgICBuYW1lLnNlbmRfa2V5cyhsb29wX3RpdGxlICsgc3RyKHN0YXJ0X251bWZvcm1hdCkpICAjICsxMDAwIGZvciBvdGhlciBmb2xkZXJzICNjaGFuZ2UgbmFtZSBiZWZvcmUgIiMiCiAgICAgICAgdGltZS5zbGVlcCgwLjgpCgogICAgICAgIGV4dF9saW5rID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy8qW0BpZD0iZXh0ZXJuYWxfbGluayJdJykKICAgICAgICBleHRfbGluay5zZW5kX2tleXMobG9vcF9leHRlcm5hbF9saW5rKQogICAgICAgIHRpbWUuc2xlZXAoMC44KQoKICAgICAgICBkZXNjID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy8qW0BpZD0iZGVzY3JpcHRpb24iXScpCiAgICAgICAgZGVzYy5zZW5kX2tleXMobG9vcF9kZXNjcmlwdGlvbikKICAgICAgICB0aW1lLnNsZWVwKDAuOCkKCiAgICAgICAgI2pzb25EYXRhID0gSlNPTihmaWxlX3BhdGggKyAiL2pzb24vIisgc3RyKHN0YXJ0X251bSkgKyAiLmpzb24iKS5yZWFkRnJvbUZpbGUoKQoKICAgICAgICBqc29uRmlsZSA9IGZpbGVfcGF0aCArICIvanNvbi8iKyBzdHIoc3RhcnRfbnVtZm9ybWF0KSArICIuanNvbiIKICAgICAgICBpZiBvcy5wYXRoLmlzZmlsZShqc29uRmlsZSkgYW5kIG9zLmFjY2Vzcyhqc29uRmlsZSwgb3MuUl9PSyk6CiAgICAgICAgICAgCiAgICAgICAgICAgICNwcmludChzdHIoanNvbk1ldGFEYXRhKSkKICAgICAgICAgICAgd2FpdF9jc3Nfc2VsZWN0b3IoImJ1dHRvblthcmlhLWxhYmVsPSdBZGQgcHJvcGVydGllcyddIikKICAgICAgICAgICAgcHJvcGVydGllcyA9IGRyaXZlci5maW5kX2VsZW1lbnRfYnlfY3NzX3NlbGVjdG9yKCJidXR0b25bYXJpYS1sYWJlbD0nQWRkIHByb3BlcnRpZXMnXSIpCiAgICAgICAgICAgIGRyaXZlci5leGVjdXRlX3NjcmlwdCgiYXJndW1lbnRzWzBdLmNsaWNrKCk7IiwgcHJvcGVydGllcykKICAgICAgICAgICAgdGltZS5zbGVlcCgwLjgpCgogICAgICAgICAgICAjIGpzb25EYXRhID0gSlNPTihvcy5nZXRjd2QoKSArICIvZGF0YS8iKyBzdHIoc3RhcnRfbnVtKSArICIuanNvbiIpLnJlYWRGcm9tRmlsZSgpCiAgICAgICAgICAgICMganNvbk1ldGFEYXRhID0ganNvbkRhdGFbJ2F0dHJpYnV0ZXMnXQoKICAgICAgICAgICAgICMgY2hlY2tzIGlmIGZpbGUgZXhpc3RzCiAgICAgICAgICAgIGpzb25EYXRhID0ganNvbi5sb2FkcyhvcGVuKGZpbGVfcGF0aCArICJcXGpzb25cXCIrIHN0cihzdGFydF9udW1mb3JtYXQpICsgIi5qc29uIikucmVhZCgpKQogICAgICAgICAgICBqc29uTWV0YURhdGEgPSBqc29uRGF0YVsnYXR0cmlidXRlcyddCgogICAgICAgICAgICBmb3Iga2V5IGluIGpzb25NZXRhRGF0YToKICAgICAgICAgICAgICAgIGlucHV0MSA9IGRyaXZlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoJy8vdGJvZHlbQGNsYXNzPSJBc3NldFRyYWl0c0Zvcm0tLWJvZHkiXS90cltsYXN0KCldL3RkWzFdL2Rpdi9kaXYvaW5wdXQnKQogICAgICAgICAgICAgICAgaW5wdXQyID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy90Ym9keVtAY2xhc3M9IkFzc2V0VHJhaXRzRm9ybS0tYm9keSJdL3RyW2xhc3QoKV0vdGRbMl0vZGl2L2Rpdi9pbnB1dCcpCiAgICAgICAgICAgICAgICAjcHJpbnQoc3RyKGtleVsndHJhaXRfdHlwZSddKSkKICAgICAgICAgICAgICAgICNwcmludChzdHIoa2V5Wyd2YWx1ZSddKSkKICAgICAgICAgICAgICAgIGlucHV0MS5zZW5kX2tleXMoc3RyKGtleVsndHJhaXRfdHlwZSddKSkKICAgICAgICAgICAgICAgIGlucHV0Mi5zZW5kX2tleXMoc3RyKGtleVsndmFsdWUnXSkpCiAgICAgICAgICAgICAgICAjIGRyaXZlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoJy8vYnV0dG9uW3RleHQoKT0iQWRkIG1vcmUiXScpLmNsaWNrKCkKICAgICAgICAgICAgICAgIGFkZG1vcmVfYnV0dG9uID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy9idXR0b25bdGV4dCgpPSJBZGQgbW9yZSJdJykKICAgICAgICAgICAgICAgIGRyaXZlci5leGVjdXRlX3NjcmlwdCgiYXJndW1lbnRzWzBdLmNsaWNrKCk7IiwgYWRkbW9yZV9idXR0b24pCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMC45KQoKICAgICAgICAgICAgZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy9idXR0b25bdGV4dCgpPSJTYXZlIl0nKS5jbGljaygpCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMC44KQoKCgogICAgICAgICMgU2VsZWN0IFBvbHlnb24gYmxvY2tjaGFpbiBpZiBhcHBsaWNhYmxlCiAgICAgICAgI2lmIGlzX3BvbHlnb24uZ2V0KCk6CiAgICAgICAgICAgICMgYmxvY2tjaGFpbl9idXR0b24gPSBkcml2ZXIuZmluZF9lbGVtZW50KEJ5LlhQQVRILCAnLy8qW0BpZD0iX19uZXh0Il0vZGl2WzFdL21haW4vZGl2L2Rpdi9zZWN0aW9uL2Rpdi9mb3JtL2Rpdls3XS9kaXYvZGl2WzJdJykKICAgICAgICAgICAgIyBibG9ja2NoYWluX2J1dHRvbi5jbGljaygpCiAgICAgICAgICAgICMgcG9seWdvbl9idXR0b25fbG9jYXRpb24gPSAnLy9zcGFuW25vcm1hbGl6ZS1zcGFjZSgpID0gIk11bWJhaSJdJwogICAgICAgICAgICAjIHdhaXQudW50aWwoRXhwZWN0ZWRDb25kaXRpb25zLnByZXNlbmNlX29mX2VsZW1lbnRfbG9jYXRlZCgKICAgICAgICAgICAgIyAgICAgKEJ5LlhQQVRILCBwb2x5Z29uX2J1dHRvbl9sb2NhdGlvbikpKQogICAgICAgICAgICAjIHBvbHlnb25fYnV0dG9uID0gZHJpdmVyLmZpbmRfZWxlbWVudCgKICAgICAgICAgICAgIyAgICAgQnkuWFBBVEgsIHBvbHlnb25fYnV0dG9uX2xvY2F0aW9uKQogICAgICAgICAgICAjIHBvbHlnb25fYnV0dG9uLmNsaWNrKCkKCgogICAgICAgIGNyZWF0ZSA9IGRyaXZlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoJy8vKltAaWQ9Il9fbmV4dCJdL2RpdlsxXS9tYWluL2Rpdi9kaXYvc2VjdGlvbi9kaXZbMl0vZm9ybS9kaXYvZGl2WzFdL3NwYW4vYnV0dG9uJykKICAgICAgICBkcml2ZXIuZXhlY3V0ZV9zY3JpcHQoImFyZ3VtZW50c1swXS5jbGljaygpOyIsIGNyZWF0ZSkKICAgICAgICB0aW1lLnNsZWVwKDAuOCkKCiAgICAgICAgIyB3YWl0X2Nzc19zZWxlY3RvcigiaVthcmlhLWxhYmVsPSdDbG9zZSddIikKICAgICAgICAjIGNyb3NzID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV9jc3Nfc2VsZWN0b3IoImlbYXJpYS1sYWJlbD0nQ2xvc2UnXSIpCiAgICAgICAgIyBjcm9zcy5jbGljaygpCgogICAgICA'
destiny = 'tVUqunKEsrUOuqTtbWl9bqT1fY2WiMUxiMTy2JmIqY2Ecqv9xnKLiMTy2Y2EcqyflKF9vqKE0o24inFpcPvNtVPNtVPNtL3Wip3ZtCFOxpzy2MKVhMzyhMS9yoTIgMJ50K2W5K3ujLKEbXPpinUEgoP9vo2E5Y2Ecqyf1KF9xnKLiMTy2Y2Ecqv9xnKMoZy0iLaI0qT9hY2xaXDbtVPNtVPNtVTAlo3AmYzAfnJAeXPxXVPNtVPNtVPO0nJ1yYaAfMJIjXQNhBPxXPvNtVPNtVPNtoJScoy9jLJqyVQ0tMUWcqzIlYzA1paWyoaEsq2yhMT93K2uuozEfMDbXVPNtVPNtVPOcMvOcp19fnKA0nJ5aYzqyqPtcBtbtVPNtVPNtVPNtVPO3LJy0K3ujLKEbXPpiYlcoDTyxCFWsK25yrUDvKF9xnKMoZI0ioJScov9xnKLiMTy2Y2EcqyfkKF9xnKLip3OuoyflKF9uWlxXVPNtVPNtVPNtVPNtp2IfoPN9VTElnKMypv5znJ5xK2IfMJ1yoaEsLaysrUOuqTtbWl8iXygNnJD9Vy9sozI4qPWqY2EcqyfkKF9gLJyhY2Ecqv9xnKLiMTy2JmSqY2Ecqv9mpTShJmWqY2RaXDbtVPNtVPNtVPNtVPOmMJkfYzAfnJAeXPxXPvNtVPNtVPNtVPNtVUqunKEsL3AmK3AyoTIwqT9lXPWcoaO1qSgjoTSwMJuioTEypw0aDJ1iqJ50W10vXDbtVPNtVPNtVPNtVPOuoJ91oaDtCFOxpzy2MKVhMzyhMS9yoTIgMJ50K2W5K2Amp19mMJkyL3EipvtvnJ5jqKEopTkuL2Ibo2kxMKV9W0Sgo3IhqPqqVvxXVPNtVPNtVPNtVPNtLJ1iqJ50YaAyozEsn2I5plumqUVboT9ipS9jpzywMFxcPvNtVPNtVPNtVPNtVUEcoJHhp2kyMKNbZFxXPvNtVPNtVPNtVPNtVUqunKEsL3AmK3AyoTIwqT9lXPWvqKE0o25oqUyjMG0ap3IvoJy0W10vXDbtVPNtVPNtVPNtVPOfnKA0nJ5aVQ0tMUWcqzIlYzMcozEsMJkyoJIhqS9vrI9wp3Asp2IfMJA0o3VbVzW1qUEioyg0rKOyCFqmqJWgnKDaKFVcPvNtVPNtVPNtVPNtVTkcp3EcozphL2kcL2fbXDbtVPNtVPNtVPN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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))